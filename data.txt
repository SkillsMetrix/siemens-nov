

import { createAction } from '@ngrx/store'
import { Movie } from 'src/app/Models/movie';

export const getMovies=createAction('[Movie] get movie');

export const getMovieSuccess=createAction('[Movie] load movie ',(movies:ReadonlyArray<Movie>)=>({movies}));
export const addMovies=createAction('[Movie] add movie',(movie:Movie)=>(movie));
export const addMoviesSuccess=createAction('[Movie] add movie Success',(movie:Movie)=>({movie}));


----------
import { Actions, createEffect, ofType }  from '@ngrx/effects'
import { DataService } from 'src/app/Service/data.service';
import { getMovies, getMovieSuccess } from '../Actions/movie.actions';
import { exhaustMap, map } from 'rxjs/operators';
import { Injectable } from '@angular/core';

@Injectable()
export class MovieEffect {
    loadMovies$=createEffect(()=>
    this.action$.pipe(
        ofType(getMovies),
        exhaustMap(()=>
            this.ds.getMovies().pipe(
                map((movies)=> getMovieSuccess(movies))
            )
        )
    )
    )
    

    constructor(private action$:Actions,private ds:DataService){}
}
-------------
